#server {
    #listen 80;
    #server_name 84.249.22.169;  # Replace with your actual public IP or domain name

    # Redirect all HTTP traffic to HTTPS
    #return 301 https://$host$request_uri;
    #location / {
        #proxy_pass http://127.0.0.1:5000;  # Forward requests to your app on port 5000
        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto $scheme;  # Preserve original protocol (http or https)
    #}
#}

# HTTPS server block
server {
    listen 443 ssl;
    server_name 84.249.22.169;  # Replace with your actual public IP or domain name

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

    # SSL Security Settings (Optional but recommended)
    #ssl_protocols TLSv1.2 TLSv1.3;
    #ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256';
    #ssl_prefer_server_ciphers on;

    # Proxy to backend application
    location / {
        proxy_pass http://127.0.0.1:5000;  # Forward requests to your app on port 5000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # Preserve original protocol (http or https)
    }

    # Custom error page for bad gateway (502)
    error_page 502 /502.html;
}